{
    "sourceFile": "contracts/Lock.sol",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1717490712993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717491127596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n         // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n \n         require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n-        require(msg.sender == owner, \"You aren't the owner test\");\n+        require(msg.sender == owner, \"You aren't the test owner\");\n \n         emit Withdrawal(address(this).balance, block.timestamp);\n \n         owner.transfer(address(this).balance);\n"
                },
                {
                    "date": 1717492758057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n         // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n         // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n \n         require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n-        require(msg.sender == owner, \"You aren't the test owner\");\n+        require(msg.sender == owner, \"You aren't the owner\");\n \n         emit Withdrawal(address(this).balance, block.timestamp);\n \n         owner.transfer(address(this).balance);\n"
                }
            ],
            "date": 1717490712993,
            "name": "Commit-0",
            "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner test\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"
        }
    ]
}